rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // TEMPORARY: Allow all operations for development
    // WARNING: REMOVE BEFORE DEPLOYING TO PRODUCTION
    match /{document=**} {
      allow read, write: if true;
    }
    
    // COMMENTED OUT FOR DEVELOPMENT - UNCOMMENT FOR PRODUCTION
    /*
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    */
    
    // COMMENTED OUT FOR DEVELOPMENT - UNCOMMENT FOR PRODUCTION
    /*
    // Users collection
    match /users/{userId} {
      // Users can read and write their own profile, admins can read all profiles
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Vehicles collection 
    match /vehicles/{vehicleId} {
      // Vehicle owners can read and write their own vehicles
      // All authenticated users can read vehicle details for booking
      // Admins can read and write all vehicles
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                    request.resource.data.ownerId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   (resource.data.ownerId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
                   (resource.data.ownerId == request.auth.uid || isAdmin());
    }
    
    // Bookings collection 
    match /bookings/{bookingId} {
      // Customers can read and create bookings
      // Owners can read and update bookings for their vehicles
      // Admins can read, update and delete all bookings
      allow read: if isAuthenticated() && 
                 (resource.data.customerId == request.auth.uid || 
                  resource.data.ownerId == request.auth.uid || 
                  isAdmin());
      
      allow create: if isAuthenticated() && 
                    request.resource.data.customerId == request.auth.uid;
      
      allow update: if isAuthenticated() && 
                   (resource.data.customerId == request.auth.uid || 
                    resource.data.ownerId == request.auth.uid || 
                    isAdmin());
      
      allow delete: if isAdmin();
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      // Anyone can read reviews
      // Users can create reviews for bookings they were part of
      // Only admins can update or delete reviews
      allow read: if true;
      
      allow create: if isAuthenticated() && 
                    exists(/databases/$(database)/documents/bookings/$(request.resource.data.bookingId)) &&
                    (
                      get(/databases/$(database)/documents/bookings/$(request.resource.data.bookingId)).data.customerId == request.auth.uid ||
                      get(/databases/$(database)/documents/bookings/$(request.resource.data.bookingId)).data.ownerId == request.auth.uid
                    ) &&
                    request.resource.data.reviewerId == request.auth.uid;
      
      allow update, delete: if isAdmin();
    }
    
    // Messages collection
    match /messages/{messageId} {
      // Users can read their own messages and create messages
      // Only admins can update or delete messages
      allow read: if isAuthenticated() && 
                 (resource.data.senderId == request.auth.uid || 
                  resource.data.recipientId == request.auth.uid || 
                  isAdmin());
      
      allow create: if isAuthenticated() && 
                    request.resource.data.senderId == request.auth.uid;
      
      allow update, delete: if isAdmin();
    }
    */
  }
}